/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 48363.0, "series": [{"data": [[0.0, 351.0], [0.1, 400.0], [0.2, 406.0], [0.3, 518.0], [0.4, 569.0], [0.5, 584.0], [0.6, 597.0], [0.7, 616.0], [0.8, 622.0], [0.9, 645.0], [1.0, 654.0], [1.1, 664.0], [1.2, 688.0], [1.3, 705.0], [1.4, 711.0], [1.5, 717.0], [1.6, 721.0], [1.7, 722.0], [1.8, 726.0], [1.9, 729.0], [2.0, 730.0], [2.1, 731.0], [2.2, 732.0], [2.3, 734.0], [2.4, 735.0], [2.5, 737.0], [2.6, 738.0], [2.7, 738.0], [2.8, 740.0], [2.9, 745.0], [3.0, 755.0], [3.1, 814.0], [3.2, 887.0], [3.3, 984.0], [3.4, 1057.0], [3.5, 1086.0], [3.6, 1156.0], [3.7, 1235.0], [3.8, 1266.0], [3.9, 1277.0], [4.0, 1292.0], [4.1, 1306.0], [4.2, 1309.0], [4.3, 1311.0], [4.4, 1321.0], [4.5, 1331.0], [4.6, 1339.0], [4.7, 1340.0], [4.8, 1342.0], [4.9, 1343.0], [5.0, 1346.0], [5.1, 1351.0], [5.2, 1356.0], [5.3, 1362.0], [5.4, 1364.0], [5.5, 1376.0], [5.6, 1380.0], [5.7, 1399.0], [5.8, 1415.0], [5.9, 1437.0], [6.0, 1449.0], [6.1, 1456.0], [6.2, 1461.0], [6.3, 1467.0], [6.4, 1471.0], [6.5, 1478.0], [6.6, 1481.0], [6.7, 1487.0], [6.8, 1489.0], [6.9, 1493.0], [7.0, 1500.0], [7.1, 1501.0], [7.2, 1504.0], [7.3, 1506.0], [7.4, 1510.0], [7.5, 1512.0], [7.6, 1514.0], [7.7, 1516.0], [7.8, 1520.0], [7.9, 1521.0], [8.0, 1523.0], [8.1, 1524.0], [8.2, 1526.0], [8.3, 1527.0], [8.4, 1528.0], [8.5, 1529.0], [8.6, 1536.0], [8.7, 1538.0], [8.8, 1539.0], [8.9, 1543.0], [9.0, 1545.0], [9.1, 1548.0], [9.2, 1549.0], [9.3, 1553.0], [9.4, 1557.0], [9.5, 1560.0], [9.6, 1564.0], [9.7, 1568.0], [9.8, 1570.0], [9.9, 1571.0], [10.0, 1586.0], [10.1, 1601.0], [10.2, 1629.0], [10.3, 1637.0], [10.4, 1653.0], [10.5, 1659.0], [10.6, 1670.0], [10.7, 1672.0], [10.8, 1673.0], [10.9, 1675.0], [11.0, 1680.0], [11.1, 1684.0], [11.2, 1686.0], [11.3, 1688.0], [11.4, 1689.0], [11.5, 1692.0], [11.6, 1694.0], [11.7, 1695.0], [11.8, 1702.0], [11.9, 1705.0], [12.0, 1707.0], [12.1, 1710.0], [12.2, 1711.0], [12.3, 1712.0], [12.4, 1714.0], [12.5, 1715.0], [12.6, 1718.0], [12.7, 1720.0], [12.8, 1724.0], [12.9, 1726.0], [13.0, 1729.0], [13.1, 1737.0], [13.2, 1743.0], [13.3, 1749.0], [13.4, 1757.0], [13.5, 1762.0], [13.6, 1765.0], [13.7, 1772.0], [13.8, 1777.0], [13.9, 1780.0], [14.0, 1787.0], [14.1, 1795.0], [14.2, 1806.0], [14.3, 1815.0], [14.4, 1829.0], [14.5, 1837.0], [14.6, 1844.0], [14.7, 1845.0], [14.8, 1849.0], [14.9, 1853.0], [15.0, 1856.0], [15.1, 1859.0], [15.2, 1864.0], [15.3, 1867.0], [15.4, 1872.0], [15.5, 1872.0], [15.6, 1873.0], [15.7, 1875.0], [15.8, 1876.0], [15.9, 1879.0], [16.0, 1882.0], [16.1, 1884.0], [16.2, 1887.0], [16.3, 1889.0], [16.4, 1892.0], [16.5, 1893.0], [16.6, 1894.0], [16.7, 1899.0], [16.8, 1900.0], [16.9, 1903.0], [17.0, 1906.0], [17.1, 1910.0], [17.2, 1916.0], [17.3, 1922.0], [17.4, 1932.0], [17.5, 1934.0], [17.6, 1937.0], [17.7, 1946.0], [17.8, 1950.0], [17.9, 1954.0], [18.0, 1962.0], [18.1, 1989.0], [18.2, 2019.0], [18.3, 2024.0], [18.4, 2029.0], [18.5, 2034.0], [18.6, 2037.0], [18.7, 2041.0], [18.8, 2046.0], [18.9, 2050.0], [19.0, 2051.0], [19.1, 2054.0], [19.2, 2058.0], [19.3, 2060.0], [19.4, 2063.0], [19.5, 2069.0], [19.6, 2071.0], [19.7, 2072.0], [19.8, 2076.0], [19.9, 2079.0], [20.0, 2084.0], [20.1, 2086.0], [20.2, 2091.0], [20.3, 2111.0], [20.4, 2132.0], [20.5, 2141.0], [20.6, 2169.0], [20.7, 2177.0], [20.8, 2180.0], [20.9, 2187.0], [21.0, 2197.0], [21.1, 2200.0], [21.2, 2201.0], [21.3, 2204.0], [21.4, 2206.0], [21.5, 2212.0], [21.6, 2216.0], [21.7, 2218.0], [21.8, 2220.0], [21.9, 2222.0], [22.0, 2226.0], [22.1, 2230.0], [22.2, 2234.0], [22.3, 2238.0], [22.4, 2242.0], [22.5, 2248.0], [22.6, 2252.0], [22.7, 2255.0], [22.8, 2262.0], [22.9, 2269.0], [23.0, 2272.0], [23.1, 2280.0], [23.2, 2290.0], [23.3, 2292.0], [23.4, 2299.0], [23.5, 2302.0], [23.6, 2310.0], [23.7, 2313.0], [23.8, 2320.0], [23.9, 2327.0], [24.0, 2333.0], [24.1, 2344.0], [24.2, 2352.0], [24.3, 2355.0], [24.4, 2358.0], [24.5, 2366.0], [24.6, 2367.0], [24.7, 2370.0], [24.8, 2375.0], [24.9, 2382.0], [25.0, 2395.0], [25.1, 2399.0], [25.2, 2411.0], [25.3, 2417.0], [25.4, 2434.0], [25.5, 2439.0], [25.6, 2441.0], [25.7, 2443.0], [25.8, 2453.0], [25.9, 2456.0], [26.0, 2464.0], [26.1, 2472.0], [26.2, 2485.0], [26.3, 2487.0], [26.4, 2494.0], [26.5, 2495.0], [26.6, 2497.0], [26.7, 2500.0], [26.8, 2503.0], [26.9, 2506.0], [27.0, 2510.0], [27.1, 2514.0], [27.2, 2517.0], [27.3, 2522.0], [27.4, 2524.0], [27.5, 2531.0], [27.6, 2536.0], [27.7, 2545.0], [27.8, 2557.0], [27.9, 2563.0], [28.0, 2565.0], [28.1, 2569.0], [28.2, 2580.0], [28.3, 2590.0], [28.4, 2590.0], [28.5, 2595.0], [28.6, 2604.0], [28.7, 2610.0], [28.8, 2615.0], [28.9, 2622.0], [29.0, 2627.0], [29.1, 2629.0], [29.2, 2633.0], [29.3, 2637.0], [29.4, 2642.0], [29.5, 2646.0], [29.6, 2653.0], [29.7, 2654.0], [29.8, 2658.0], [29.9, 2663.0], [30.0, 2667.0], [30.1, 2676.0], [30.2, 2677.0], [30.3, 2680.0], [30.4, 2683.0], [30.5, 2691.0], [30.6, 2695.0], [30.7, 2705.0], [30.8, 2713.0], [30.9, 2718.0], [31.0, 2724.0], [31.1, 2728.0], [31.2, 2731.0], [31.3, 2737.0], [31.4, 2749.0], [31.5, 2753.0], [31.6, 2759.0], [31.7, 2763.0], [31.8, 2764.0], [31.9, 2770.0], [32.0, 2777.0], [32.1, 2782.0], [32.2, 2791.0], [32.3, 2801.0], [32.4, 2803.0], [32.5, 2813.0], [32.6, 2823.0], [32.7, 2825.0], [32.8, 2836.0], [32.9, 2839.0], [33.0, 2841.0], [33.1, 2849.0], [33.2, 2854.0], [33.3, 2860.0], [33.4, 2863.0], [33.5, 2867.0], [33.6, 2870.0], [33.7, 2877.0], [33.8, 2878.0], [33.9, 2886.0], [34.0, 2894.0], [34.1, 2896.0], [34.2, 2900.0], [34.3, 2905.0], [34.4, 2910.0], [34.5, 2913.0], [34.6, 2919.0], [34.7, 2922.0], [34.8, 2925.0], [34.9, 2926.0], [35.0, 2928.0], [35.1, 2934.0], [35.2, 2936.0], [35.3, 2940.0], [35.4, 2944.0], [35.5, 2947.0], [35.6, 2948.0], [35.7, 2957.0], [35.8, 2961.0], [35.9, 2963.0], [36.0, 2971.0], [36.1, 2977.0], [36.2, 2980.0], [36.3, 2986.0], [36.4, 2989.0], [36.5, 2993.0], [36.6, 3002.0], [36.7, 3006.0], [36.8, 3010.0], [36.9, 3020.0], [37.0, 3023.0], [37.1, 3030.0], [37.2, 3037.0], [37.3, 3066.0], [37.4, 3073.0], [37.5, 3083.0], [37.6, 3088.0], [37.7, 3094.0], [37.8, 3099.0], [37.9, 3118.0], [38.0, 3135.0], [38.1, 3139.0], [38.2, 3153.0], [38.3, 3167.0], [38.4, 3183.0], [38.5, 3194.0], [38.6, 3202.0], [38.7, 3209.0], [38.8, 3222.0], [38.9, 3248.0], [39.0, 3267.0], [39.1, 3273.0], [39.2, 3295.0], [39.3, 3313.0], [39.4, 3325.0], [39.5, 3331.0], [39.6, 3346.0], [39.7, 3354.0], [39.8, 3359.0], [39.9, 3370.0], [40.0, 3379.0], [40.1, 3390.0], [40.2, 3408.0], [40.3, 3420.0], [40.4, 3425.0], [40.5, 3437.0], [40.6, 3449.0], [40.7, 3458.0], [40.8, 3468.0], [40.9, 3481.0], [41.0, 3488.0], [41.1, 3510.0], [41.2, 3522.0], [41.3, 3527.0], [41.4, 3530.0], [41.5, 3536.0], [41.6, 3538.0], [41.7, 3552.0], [41.8, 3558.0], [41.9, 3561.0], [42.0, 3570.0], [42.1, 3581.0], [42.2, 3584.0], [42.3, 3592.0], [42.4, 3597.0], [42.5, 3604.0], [42.6, 3610.0], [42.7, 3613.0], [42.8, 3618.0], [42.9, 3621.0], [43.0, 3651.0], [43.1, 3667.0], [43.2, 3686.0], [43.3, 3691.0], [43.4, 3702.0], [43.5, 3706.0], [43.6, 3713.0], [43.7, 3716.0], [43.8, 3721.0], [43.9, 3730.0], [44.0, 3732.0], [44.1, 3744.0], [44.2, 3746.0], [44.3, 3761.0], [44.4, 3770.0], [44.5, 3777.0], [44.6, 3780.0], [44.7, 3786.0], [44.8, 3790.0], [44.9, 3791.0], [45.0, 3793.0], [45.1, 3802.0], [45.2, 3807.0], [45.3, 3808.0], [45.4, 3815.0], [45.5, 3816.0], [45.6, 3819.0], [45.7, 3824.0], [45.8, 3829.0], [45.9, 3831.0], [46.0, 3833.0], [46.1, 3839.0], [46.2, 3844.0], [46.3, 3848.0], [46.4, 3850.0], [46.5, 3850.0], [46.6, 3853.0], [46.7, 3857.0], [46.8, 3859.0], [46.9, 3861.0], [47.0, 3864.0], [47.1, 3867.0], [47.2, 3870.0], [47.3, 3875.0], [47.4, 3877.0], [47.5, 3879.0], [47.6, 3882.0], [47.7, 3884.0], [47.8, 3886.0], [47.9, 3887.0], [48.0, 3888.0], [48.1, 3897.0], [48.2, 3897.0], [48.3, 3901.0], [48.4, 3904.0], [48.5, 3906.0], [48.6, 3907.0], [48.7, 3909.0], [48.8, 3911.0], [48.9, 3919.0], [49.0, 3927.0], [49.1, 3930.0], [49.2, 3936.0], [49.3, 3939.0], [49.4, 3940.0], [49.5, 3951.0], [49.6, 3960.0], [49.7, 3965.0], [49.8, 3968.0], [49.9, 3972.0], [50.0, 3975.0], [50.1, 3987.0], [50.2, 3996.0], [50.3, 3998.0], [50.4, 4001.0], [50.5, 4006.0], [50.6, 4011.0], [50.7, 4016.0], [50.8, 4025.0], [50.9, 4027.0], [51.0, 4029.0], [51.1, 4038.0], [51.2, 4047.0], [51.3, 4053.0], [51.4, 4056.0], [51.5, 4059.0], [51.6, 4063.0], [51.7, 4067.0], [51.8, 4074.0], [51.9, 4081.0], [52.0, 4081.0], [52.1, 4089.0], [52.2, 4091.0], [52.3, 4095.0], [52.4, 4101.0], [52.5, 4104.0], [52.6, 4110.0], [52.7, 4114.0], [52.8, 4115.0], [52.9, 4119.0], [53.0, 4132.0], [53.1, 4136.0], [53.2, 4139.0], [53.3, 4149.0], [53.4, 4158.0], [53.5, 4167.0], [53.6, 4172.0], [53.7, 4180.0], [53.8, 4188.0], [53.9, 4190.0], [54.0, 4194.0], [54.1, 4202.0], [54.2, 4211.0], [54.3, 4214.0], [54.4, 4222.0], [54.5, 4225.0], [54.6, 4229.0], [54.7, 4234.0], [54.8, 4240.0], [54.9, 4242.0], [55.0, 4247.0], [55.1, 4250.0], [55.2, 4265.0], [55.3, 4269.0], [55.4, 4275.0], [55.5, 4276.0], [55.6, 4287.0], [55.7, 4289.0], [55.8, 4297.0], [55.9, 4300.0], [56.0, 4319.0], [56.1, 4325.0], [56.2, 4330.0], [56.3, 4342.0], [56.4, 4346.0], [56.5, 4349.0], [56.6, 4354.0], [56.7, 4360.0], [56.8, 4367.0], [56.9, 4377.0], [57.0, 4383.0], [57.1, 4389.0], [57.2, 4401.0], [57.3, 4411.0], [57.4, 4416.0], [57.5, 4422.0], [57.6, 4426.0], [57.7, 4435.0], [57.8, 4440.0], [57.9, 4441.0], [58.0, 4445.0], [58.1, 4448.0], [58.2, 4451.0], [58.3, 4453.0], [58.4, 4459.0], [58.5, 4463.0], [58.6, 4464.0], [58.7, 4467.0], [58.8, 4468.0], [58.9, 4474.0], [59.0, 4479.0], [59.1, 4487.0], [59.2, 4493.0], [59.3, 4496.0], [59.4, 4501.0], [59.5, 4511.0], [59.6, 4517.0], [59.7, 4521.0], [59.8, 4523.0], [59.9, 4529.0], [60.0, 4541.0], [60.1, 4550.0], [60.2, 4556.0], [60.3, 4571.0], [60.4, 4582.0], [60.5, 4587.0], [60.6, 4595.0], [60.7, 4611.0], [60.8, 4615.0], [60.9, 4624.0], [61.0, 4628.0], [61.1, 4633.0], [61.2, 4635.0], [61.3, 4639.0], [61.4, 4645.0], [61.5, 4649.0], [61.6, 4653.0], [61.7, 4658.0], [61.8, 4663.0], [61.9, 4668.0], [62.0, 4674.0], [62.1, 4681.0], [62.2, 4683.0], [62.3, 4687.0], [62.4, 4698.0], [62.5, 4702.0], [62.6, 4715.0], [62.7, 4723.0], [62.8, 4730.0], [62.9, 4735.0], [63.0, 4740.0], [63.1, 4741.0], [63.2, 4745.0], [63.3, 4748.0], [63.4, 4754.0], [63.5, 4763.0], [63.6, 4766.0], [63.7, 4768.0], [63.8, 4773.0], [63.9, 4775.0], [64.0, 4784.0], [64.1, 4785.0], [64.2, 4792.0], [64.3, 4795.0], [64.4, 4802.0], [64.5, 4808.0], [64.6, 4819.0], [64.7, 4828.0], [64.8, 4843.0], [64.9, 4851.0], [65.0, 4860.0], [65.1, 4863.0], [65.2, 4876.0], [65.3, 4879.0], [65.4, 4880.0], [65.5, 4894.0], [65.6, 4899.0], [65.7, 4902.0], [65.8, 4904.0], [65.9, 4907.0], [66.0, 4909.0], [66.1, 4916.0], [66.2, 4928.0], [66.3, 4937.0], [66.4, 4939.0], [66.5, 4941.0], [66.6, 4943.0], [66.7, 4944.0], [66.8, 4945.0], [66.9, 4949.0], [67.0, 4950.0], [67.1, 4954.0], [67.2, 4957.0], [67.3, 4962.0], [67.4, 4969.0], [67.5, 4971.0], [67.6, 4976.0], [67.7, 4984.0], [67.8, 4985.0], [67.9, 4990.0], [68.0, 4992.0], [68.1, 4997.0], [68.2, 5010.0], [68.3, 5017.0], [68.4, 5019.0], [68.5, 5023.0], [68.6, 5027.0], [68.7, 5031.0], [68.8, 5036.0], [68.9, 5040.0], [69.0, 5045.0], [69.1, 5048.0], [69.2, 5050.0], [69.3, 5054.0], [69.4, 5056.0], [69.5, 5065.0], [69.6, 5071.0], [69.7, 5084.0], [69.8, 5089.0], [69.9, 5091.0], [70.0, 5093.0], [70.1, 5101.0], [70.2, 5105.0], [70.3, 5108.0], [70.4, 5114.0], [70.5, 5119.0], [70.6, 5121.0], [70.7, 5125.0], [70.8, 5128.0], [70.9, 5134.0], [71.0, 5141.0], [71.1, 5145.0], [71.2, 5147.0], [71.3, 5150.0], [71.4, 5154.0], [71.5, 5162.0], [71.6, 5167.0], [71.7, 5171.0], [71.8, 5173.0], [71.9, 5179.0], [72.0, 5185.0], [72.1, 5190.0], [72.2, 5192.0], [72.3, 5193.0], [72.4, 5195.0], [72.5, 5204.0], [72.6, 5205.0], [72.7, 5207.0], [72.8, 5208.0], [72.9, 5215.0], [73.0, 5216.0], [73.1, 5220.0], [73.2, 5223.0], [73.3, 5226.0], [73.4, 5231.0], [73.5, 5236.0], [73.6, 5239.0], [73.7, 5244.0], [73.8, 5249.0], [73.9, 5255.0], [74.0, 5256.0], [74.1, 5259.0], [74.2, 5263.0], [74.3, 5269.0], [74.4, 5271.0], [74.5, 5275.0], [74.6, 5279.0], [74.7, 5287.0], [74.8, 5294.0], [74.9, 5297.0], [75.0, 5300.0], [75.1, 5305.0], [75.2, 5314.0], [75.3, 5315.0], [75.4, 5318.0], [75.5, 5321.0], [75.6, 5326.0], [75.7, 5328.0], [75.8, 5329.0], [75.9, 5332.0], [76.0, 5334.0], [76.1, 5337.0], [76.2, 5344.0], [76.3, 5346.0], [76.4, 5353.0], [76.5, 5359.0], [76.6, 5364.0], [76.7, 5368.0], [76.8, 5373.0], [76.9, 5379.0], [77.0, 5384.0], [77.1, 5388.0], [77.2, 5395.0], [77.3, 5398.0], [77.4, 5400.0], [77.5, 5411.0], [77.6, 5416.0], [77.7, 5420.0], [77.8, 5423.0], [77.9, 5427.0], [78.0, 5433.0], [78.1, 5439.0], [78.2, 5442.0], [78.3, 5443.0], [78.4, 5447.0], [78.5, 5449.0], [78.6, 5450.0], [78.7, 5452.0], [78.8, 5459.0], [78.9, 5460.0], [79.0, 5464.0], [79.1, 5473.0], [79.2, 5475.0], [79.3, 5482.0], [79.4, 5488.0], [79.5, 5490.0], [79.6, 5493.0], [79.7, 5498.0], [79.8, 5500.0], [79.9, 5506.0], [80.0, 5508.0], [80.1, 5510.0], [80.2, 5514.0], [80.3, 5516.0], [80.4, 5518.0], [80.5, 5519.0], [80.6, 5522.0], [80.7, 5525.0], [80.8, 5527.0], [80.9, 5532.0], [81.0, 5535.0], [81.1, 5537.0], [81.2, 5539.0], [81.3, 5543.0], [81.4, 5546.0], [81.5, 5547.0], [81.6, 5549.0], [81.7, 5552.0], [81.8, 5554.0], [81.9, 5556.0], [82.0, 5560.0], [82.1, 5562.0], [82.2, 5567.0], [82.3, 5575.0], [82.4, 5577.0], [82.5, 5579.0], [82.6, 5581.0], [82.7, 5584.0], [82.8, 5588.0], [82.9, 5592.0], [83.0, 5597.0], [83.1, 5602.0], [83.2, 5604.0], [83.3, 5608.0], [83.4, 5611.0], [83.5, 5613.0], [83.6, 5615.0], [83.7, 5617.0], [83.8, 5618.0], [83.9, 5620.0], [84.0, 5625.0], [84.1, 5627.0], [84.2, 5630.0], [84.3, 5633.0], [84.4, 5638.0], [84.5, 5640.0], [84.6, 5641.0], [84.7, 5642.0], [84.8, 5646.0], [84.9, 5648.0], [85.0, 5649.0], [85.1, 5650.0], [85.2, 5652.0], [85.3, 5653.0], [85.4, 5655.0], [85.5, 5656.0], [85.6, 5657.0], [85.7, 5659.0], [85.8, 5660.0], [85.9, 5662.0], [86.0, 5666.0], [86.1, 5669.0], [86.2, 5670.0], [86.3, 5673.0], [86.4, 5675.0], [86.5, 5675.0], [86.6, 5680.0], [86.7, 5681.0], [86.8, 5684.0], [86.9, 5686.0], [87.0, 5687.0], [87.1, 5689.0], [87.2, 5693.0], [87.3, 5695.0], [87.4, 5696.0], [87.5, 5700.0], [87.6, 5701.0], [87.7, 5704.0], [87.8, 5706.0], [87.9, 5710.0], [88.0, 5712.0], [88.1, 5716.0], [88.2, 5718.0], [88.3, 5721.0], [88.4, 5723.0], [88.5, 5724.0], [88.6, 5727.0], [88.7, 5730.0], [88.8, 5732.0], [88.9, 5736.0], [89.0, 5738.0], [89.1, 5740.0], [89.2, 5742.0], [89.3, 5743.0], [89.4, 5746.0], [89.5, 5754.0], [89.6, 5756.0], [89.7, 5759.0], [89.8, 5764.0], [89.9, 5765.0], [90.0, 5771.0], [90.1, 5772.0], [90.2, 5773.0], [90.3, 5775.0], [90.4, 5777.0], [90.5, 5786.0], [90.6, 5790.0], [90.7, 5791.0], [90.8, 5796.0], [90.9, 5798.0], [91.0, 5799.0], [91.1, 5801.0], [91.2, 5805.0], [91.3, 5810.0], [91.4, 5813.0], [91.5, 5816.0], [91.6, 5818.0], [91.7, 5821.0], [91.8, 5825.0], [91.9, 5830.0], [92.0, 5834.0], [92.1, 5837.0], [92.2, 5842.0], [92.3, 5848.0], [92.4, 5851.0], [92.5, 5856.0], [92.6, 5857.0], [92.7, 5857.0], [92.8, 5865.0], [92.9, 5868.0], [93.0, 5871.0], [93.1, 5883.0], [93.2, 5888.0], [93.3, 5891.0], [93.4, 5895.0], [93.5, 5905.0], [93.6, 5907.0], [93.7, 5915.0], [93.8, 5923.0], [93.9, 5929.0], [94.0, 5933.0], [94.1, 5941.0], [94.2, 5948.0], [94.3, 5952.0], [94.4, 5957.0], [94.5, 5970.0], [94.6, 5973.0], [94.7, 5991.0], [94.8, 5996.0], [94.9, 6007.0], [95.0, 6011.0], [95.1, 6024.0], [95.2, 6042.0], [95.3, 6072.0], [95.4, 6104.0], [95.5, 6142.0], [95.6, 6207.0], [95.7, 6242.0], [95.8, 6259.0], [95.9, 6264.0], [96.0, 6277.0], [96.1, 6290.0], [96.2, 6305.0], [96.3, 6311.0], [96.4, 6322.0], [96.5, 6327.0], [96.6, 6350.0], [96.7, 6361.0], [96.8, 6382.0], [96.9, 6390.0], [97.0, 6407.0], [97.1, 6432.0], [97.2, 6440.0], [97.3, 6444.0], [97.4, 6453.0], [97.5, 6475.0], [97.6, 6495.0], [97.7, 6504.0], [97.8, 6518.0], [97.9, 6527.0], [98.0, 6542.0], [98.1, 6556.0], [98.2, 6585.0], [98.3, 6611.0], [98.4, 6636.0], [98.5, 6651.0], [98.6, 6670.0], [98.7, 6698.0], [98.8, 6702.0], [98.9, 6731.0], [99.0, 6751.0], [99.1, 6781.0], [99.2, 6855.0], [99.3, 7000.0], [99.4, 7077.0], [99.5, 7295.0], [99.6, 7346.0], [99.7, 46075.0], [99.8, 46863.0], [99.9, 47990.0]], "isOverall": false, "label": "AddScholarship", "isController": false}, {"data": [[0.0, 16.0], [0.1, 16.0], [0.2, 16.0], [0.3, 16.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 16.0], [1.0, 16.0], [1.1, 16.0], [1.2, 16.0], [1.3, 16.0], [1.4, 16.0], [1.5, 16.0], [1.6, 16.0], [1.7, 16.0], [1.8, 16.0], [1.9, 16.0], [2.0, 16.0], [2.1, 16.0], [2.2, 16.0], [2.3, 16.0], [2.4, 16.0], [2.5, 16.0], [2.6, 16.0], [2.7, 16.0], [2.8, 16.0], [2.9, 16.0], [3.0, 16.0], [3.1, 16.0], [3.2, 16.0], [3.3, 16.0], [3.4, 16.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 16.0], [4.2, 16.0], [4.3, 16.0], [4.4, 16.0], [4.5, 16.0], [4.6, 16.0], [4.7, 16.0], [4.8, 16.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 16.0], [5.3, 16.0], [5.4, 16.0], [5.5, 16.0], [5.6, 16.0], [5.7, 16.0], [5.8, 16.0], [5.9, 16.0], [6.0, 16.0], [6.1, 16.0], [6.2, 16.0], [6.3, 16.0], [6.4, 16.0], [6.5, 16.0], [6.6, 16.0], [6.7, 16.0], [6.8, 16.0], [6.9, 16.0], [7.0, 16.0], [7.1, 16.0], [7.2, 16.0], [7.3, 16.0], [7.4, 16.0], [7.5, 16.0], [7.6, 16.0], [7.7, 16.0], [7.8, 16.0], [7.9, 16.0], [8.0, 16.0], [8.1, 16.0], [8.2, 16.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 16.0], [9.1, 16.0], [9.2, 16.0], [9.3, 16.0], [9.4, 16.0], [9.5, 16.0], [9.6, 16.0], [9.7, 16.0], [9.8, 16.0], [9.9, 16.0], [10.0, 16.0], [10.1, 16.0], [10.2, 16.0], [10.3, 16.0], [10.4, 16.0], [10.5, 16.0], [10.6, 16.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 16.0], [11.2, 16.0], [11.3, 16.0], [11.4, 16.0], [11.5, 16.0], [11.6, 16.0], [11.7, 16.0], [11.8, 16.0], [11.9, 16.0], [12.0, 16.0], [12.1, 16.0], [12.2, 16.0], [12.3, 16.0], [12.4, 16.0], [12.5, 16.0], [12.6, 16.0], [12.7, 16.0], [12.8, 16.0], [12.9, 16.0], [13.0, 16.0], [13.1, 16.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 16.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 16.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 16.0], [16.2, 16.0], [16.3, 16.0], [16.4, 16.0], [16.5, 16.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 16.0], [17.0, 16.0], [17.1, 16.0], [17.2, 16.0], [17.3, 16.0], [17.4, 16.0], [17.5, 16.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 16.0], [18.4, 16.0], [18.5, 16.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 16.0], [19.7, 16.0], [19.8, 16.0], [19.9, 16.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 18.0], [21.9, 18.0], [22.0, 18.0], [22.1, 18.0], [22.2, 18.0], [22.3, 18.0], [22.4, 18.0], [22.5, 18.0], [22.6, 18.0], [22.7, 18.0], [22.8, 18.0], [22.9, 18.0], [23.0, 18.0], [23.1, 18.0], [23.2, 18.0], [23.3, 18.0], [23.4, 18.0], [23.5, 18.0], [23.6, 18.0], [23.7, 18.0], [23.8, 18.0], [23.9, 18.0], [24.0, 18.0], [24.1, 18.0], [24.2, 18.0], [24.3, 18.0], [24.4, 18.0], [24.5, 18.0], [24.6, 18.0], [24.7, 18.0], [24.8, 18.0], [24.9, 18.0], [25.0, 18.0], [25.1, 18.0], [25.2, 18.0], [25.3, 18.0], [25.4, 18.0], [25.5, 18.0], [25.6, 18.0], [25.7, 18.0], [25.8, 18.0], [25.9, 18.0], [26.0, 18.0], [26.1, 18.0], [26.2, 18.0], [26.3, 18.0], [26.4, 18.0], [26.5, 18.0], [26.6, 18.0], [26.7, 18.0], [26.8, 18.0], [26.9, 18.0], [27.0, 18.0], [27.1, 18.0], [27.2, 18.0], [27.3, 18.0], [27.4, 18.0], [27.5, 18.0], [27.6, 18.0], [27.7, 18.0], [27.8, 18.0], [27.9, 18.0], [28.0, 18.0], [28.1, 18.0], [28.2, 18.0], [28.3, 18.0], [28.4, 18.0], [28.5, 18.0], [28.6, 18.0], [28.7, 18.0], [28.8, 18.0], [28.9, 18.0], [29.0, 18.0], [29.1, 18.0], [29.2, 18.0], [29.3, 18.0], [29.4, 18.0], [29.5, 18.0], [29.6, 18.0], [29.7, 18.0], [29.8, 18.0], [29.9, 18.0], [30.0, 19.0], [30.1, 19.0], [30.2, 19.0], [30.3, 19.0], [30.4, 19.0], [30.5, 19.0], [30.6, 19.0], [30.7, 19.0], [30.8, 19.0], [30.9, 19.0], [31.0, 19.0], [31.1, 19.0], [31.2, 19.0], [31.3, 19.0], [31.4, 19.0], [31.5, 19.0], [31.6, 19.0], [31.7, 19.0], [31.8, 19.0], [31.9, 19.0], [32.0, 19.0], [32.1, 19.0], [32.2, 19.0], [32.3, 19.0], [32.4, 19.0], [32.5, 19.0], [32.6, 19.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 19.0], [33.2, 19.0], [33.3, 19.0], [33.4, 19.0], [33.5, 19.0], [33.6, 19.0], [33.7, 19.0], [33.8, 19.0], [33.9, 19.0], [34.0, 19.0], [34.1, 19.0], [34.2, 19.0], [34.3, 19.0], [34.4, 19.0], [34.5, 19.0], [34.6, 19.0], [34.7, 19.0], [34.8, 19.0], [34.9, 19.0], [35.0, 19.0], [35.1, 19.0], [35.2, 19.0], [35.3, 19.0], [35.4, 19.0], [35.5, 19.0], [35.6, 19.0], [35.7, 19.0], [35.8, 19.0], [35.9, 19.0], [36.0, 19.0], [36.1, 19.0], [36.2, 19.0], [36.3, 19.0], [36.4, 19.0], [36.5, 19.0], [36.6, 19.0], [36.7, 19.0], [36.8, 19.0], [36.9, 19.0], [37.0, 19.0], [37.1, 19.0], [37.2, 19.0], [37.3, 19.0], [37.4, 19.0], [37.5, 19.0], [37.6, 19.0], [37.7, 19.0], [37.8, 19.0], [37.9, 19.0], [38.0, 19.0], [38.1, 19.0], [38.2, 19.0], [38.3, 19.0], [38.4, 19.0], [38.5, 19.0], [38.6, 19.0], [38.7, 19.0], [38.8, 19.0], [38.9, 19.0], [39.0, 19.0], [39.1, 19.0], [39.2, 19.0], [39.3, 19.0], [39.4, 19.0], [39.5, 19.0], [39.6, 19.0], [39.7, 19.0], [39.8, 19.0], [39.9, 19.0], [40.0, 19.0], [40.1, 19.0], [40.2, 19.0], [40.3, 19.0], [40.4, 19.0], [40.5, 19.0], [40.6, 19.0], [40.7, 19.0], [40.8, 19.0], [40.9, 19.0], [41.0, 19.0], [41.1, 19.0], [41.2, 19.0], [41.3, 19.0], [41.4, 19.0], [41.5, 19.0], [41.6, 19.0], [41.7, 19.0], [41.8, 19.0], [41.9, 19.0], [42.0, 19.0], [42.1, 19.0], [42.2, 19.0], [42.3, 19.0], [42.4, 19.0], [42.5, 19.0], [42.6, 19.0], [42.7, 19.0], [42.8, 19.0], [42.9, 19.0], [43.0, 19.0], [43.1, 19.0], [43.2, 19.0], [43.3, 19.0], [43.4, 19.0], [43.5, 19.0], [43.6, 19.0], [43.7, 19.0], [43.8, 19.0], [43.9, 19.0], [44.0, 19.0], [44.1, 19.0], [44.2, 19.0], [44.3, 19.0], [44.4, 19.0], [44.5, 19.0], [44.6, 19.0], [44.7, 19.0], [44.8, 19.0], [44.9, 19.0], [45.0, 19.0], [45.1, 19.0], [45.2, 19.0], [45.3, 19.0], [45.4, 19.0], [45.5, 19.0], [45.6, 19.0], [45.7, 19.0], [45.8, 19.0], [45.9, 19.0], [46.0, 19.0], [46.1, 19.0], [46.2, 19.0], [46.3, 19.0], [46.4, 19.0], [46.5, 19.0], [46.6, 19.0], [46.7, 19.0], [46.8, 19.0], [46.9, 19.0], [47.0, 19.0], [47.1, 19.0], [47.2, 19.0], [47.3, 19.0], [47.4, 19.0], [47.5, 19.0], [47.6, 19.0], [47.7, 19.0], [47.8, 19.0], [47.9, 19.0], [48.0, 19.0], [48.1, 19.0], [48.2, 19.0], [48.3, 19.0], [48.4, 19.0], [48.5, 19.0], [48.6, 19.0], [48.7, 19.0], [48.8, 19.0], [48.9, 19.0], [49.0, 19.0], [49.1, 19.0], [49.2, 19.0], [49.3, 19.0], [49.4, 19.0], [49.5, 19.0], [49.6, 19.0], [49.7, 19.0], [49.8, 19.0], [49.9, 19.0], [50.0, 19.0], [50.1, 19.0], [50.2, 19.0], [50.3, 19.0], [50.4, 19.0], [50.5, 19.0], [50.6, 19.0], [50.7, 19.0], [50.8, 19.0], [50.9, 19.0], [51.0, 19.0], [51.1, 19.0], [51.2, 19.0], [51.3, 19.0], [51.4, 19.0], [51.5, 19.0], [51.6, 19.0], [51.7, 19.0], [51.8, 19.0], [51.9, 19.0], [52.0, 19.0], [52.1, 19.0], [52.2, 19.0], [52.3, 19.0], [52.4, 19.0], [52.5, 19.0], [52.6, 19.0], [52.7, 19.0], [52.8, 19.0], [52.9, 19.0], [53.0, 19.0], [53.1, 19.0], [53.2, 19.0], [53.3, 19.0], [53.4, 19.0], [53.5, 19.0], [53.6, 19.0], [53.7, 19.0], [53.8, 19.0], [53.9, 19.0], [54.0, 19.0], [54.1, 19.0], [54.2, 19.0], [54.3, 19.0], [54.4, 19.0], [54.5, 19.0], [54.6, 19.0], [54.7, 19.0], [54.8, 19.0], [54.9, 19.0], [55.0, 19.0], [55.1, 19.0], [55.2, 19.0], [55.3, 19.0], [55.4, 19.0], [55.5, 19.0], [55.6, 19.0], [55.7, 19.0], [55.8, 19.0], [55.9, 19.0], [56.0, 19.0], [56.1, 19.0], [56.2, 19.0], [56.3, 19.0], [56.4, 19.0], [56.5, 19.0], [56.6, 19.0], [56.7, 19.0], [56.8, 19.0], [56.9, 19.0], [57.0, 19.0], [57.1, 19.0], [57.2, 19.0], [57.3, 19.0], [57.4, 19.0], [57.5, 19.0], [57.6, 19.0], [57.7, 19.0], [57.8, 19.0], [57.9, 19.0], [58.0, 19.0], [58.1, 19.0], [58.2, 19.0], [58.3, 19.0], [58.4, 19.0], [58.5, 19.0], [58.6, 19.0], [58.7, 19.0], [58.8, 19.0], [58.9, 19.0], [59.0, 19.0], [59.1, 19.0], [59.2, 19.0], [59.3, 19.0], [59.4, 19.0], [59.5, 19.0], [59.6, 19.0], [59.7, 19.0], [59.8, 19.0], [59.9, 19.0], [60.0, 22.0], [60.1, 22.0], [60.2, 22.0], [60.3, 22.0], [60.4, 22.0], [60.5, 22.0], [60.6, 22.0], [60.7, 22.0], [60.8, 22.0], [60.9, 22.0], [61.0, 22.0], [61.1, 22.0], [61.2, 22.0], [61.3, 22.0], [61.4, 22.0], [61.5, 22.0], [61.6, 22.0], [61.7, 22.0], [61.8, 22.0], [61.9, 22.0], [62.0, 22.0], [62.1, 22.0], [62.2, 22.0], [62.3, 22.0], [62.4, 22.0], [62.5, 22.0], [62.6, 22.0], [62.7, 22.0], [62.8, 22.0], [62.9, 22.0], [63.0, 22.0], [63.1, 22.0], [63.2, 22.0], [63.3, 22.0], [63.4, 22.0], [63.5, 22.0], [63.6, 22.0], [63.7, 22.0], [63.8, 22.0], [63.9, 22.0], [64.0, 22.0], [64.1, 22.0], [64.2, 22.0], [64.3, 22.0], [64.4, 22.0], [64.5, 22.0], [64.6, 22.0], [64.7, 22.0], [64.8, 22.0], [64.9, 22.0], [65.0, 22.0], [65.1, 22.0], [65.2, 22.0], [65.3, 22.0], [65.4, 22.0], [65.5, 22.0], [65.6, 22.0], [65.7, 22.0], [65.8, 22.0], [65.9, 22.0], [66.0, 22.0], [66.1, 22.0], [66.2, 22.0], [66.3, 22.0], [66.4, 22.0], [66.5, 22.0], [66.6, 22.0], [66.7, 22.0], [66.8, 22.0], [66.9, 22.0], [67.0, 22.0], [67.1, 22.0], [67.2, 22.0], [67.3, 22.0], [67.4, 22.0], [67.5, 22.0], [67.6, 22.0], [67.7, 22.0], [67.8, 22.0], [67.9, 22.0], [68.0, 22.0], [68.1, 22.0], [68.2, 22.0], [68.3, 22.0], [68.4, 22.0], [68.5, 22.0], [68.6, 22.0], [68.7, 22.0], [68.8, 22.0], [68.9, 22.0], [69.0, 22.0], [69.1, 22.0], [69.2, 22.0], [69.3, 22.0], [69.4, 22.0], [69.5, 22.0], [69.6, 22.0], [69.7, 22.0], [69.8, 22.0], [69.9, 22.0], [70.0, 32.0], [70.1, 32.0], [70.2, 32.0], [70.3, 32.0], [70.4, 32.0], [70.5, 32.0], [70.6, 32.0], [70.7, 32.0], [70.8, 32.0], [70.9, 32.0], [71.0, 32.0], [71.1, 32.0], [71.2, 32.0], [71.3, 32.0], [71.4, 32.0], [71.5, 32.0], [71.6, 32.0], [71.7, 32.0], [71.8, 32.0], [71.9, 32.0], [72.0, 32.0], [72.1, 32.0], [72.2, 32.0], [72.3, 32.0], [72.4, 32.0], [72.5, 32.0], [72.6, 32.0], [72.7, 32.0], [72.8, 32.0], [72.9, 32.0], [73.0, 32.0], [73.1, 32.0], [73.2, 32.0], [73.3, 32.0], [73.4, 32.0], [73.5, 32.0], [73.6, 32.0], [73.7, 32.0], [73.8, 32.0], [73.9, 32.0], [74.0, 32.0], [74.1, 32.0], [74.2, 32.0], [74.3, 32.0], [74.4, 32.0], [74.5, 32.0], [74.6, 32.0], [74.7, 32.0], [74.8, 32.0], [74.9, 32.0], [75.0, 32.0], [75.1, 32.0], [75.2, 32.0], [75.3, 32.0], [75.4, 32.0], [75.5, 32.0], [75.6, 32.0], [75.7, 32.0], [75.8, 32.0], [75.9, 32.0], [76.0, 32.0], [76.1, 32.0], [76.2, 32.0], [76.3, 32.0], [76.4, 32.0], [76.5, 32.0], [76.6, 32.0], [76.7, 32.0], [76.8, 32.0], [76.9, 32.0], [77.0, 32.0], [77.1, 32.0], [77.2, 32.0], [77.3, 32.0], [77.4, 32.0], [77.5, 32.0], [77.6, 32.0], [77.7, 32.0], [77.8, 32.0], [77.9, 32.0], [78.0, 32.0], [78.1, 32.0], [78.2, 32.0], [78.3, 32.0], [78.4, 32.0], [78.5, 32.0], [78.6, 32.0], [78.7, 32.0], [78.8, 32.0], [78.9, 32.0], [79.0, 32.0], [79.1, 32.0], [79.2, 32.0], [79.3, 32.0], [79.4, 32.0], [79.5, 32.0], [79.6, 32.0], [79.7, 32.0], [79.8, 32.0], [79.9, 32.0], [80.0, 32.0], [80.1, 32.0], [80.2, 32.0], [80.3, 32.0], [80.4, 32.0], [80.5, 32.0], [80.6, 32.0], [80.7, 32.0], [80.8, 32.0], [80.9, 32.0], [81.0, 32.0], [81.1, 32.0], [81.2, 32.0], [81.3, 32.0], [81.4, 32.0], [81.5, 32.0], [81.6, 32.0], [81.7, 32.0], [81.8, 32.0], [81.9, 32.0], [82.0, 32.0], [82.1, 32.0], [82.2, 32.0], [82.3, 32.0], [82.4, 32.0], [82.5, 32.0], [82.6, 32.0], [82.7, 32.0], [82.8, 32.0], [82.9, 32.0], [83.0, 32.0], [83.1, 32.0], [83.2, 32.0], [83.3, 32.0], [83.4, 32.0], [83.5, 32.0], [83.6, 32.0], [83.7, 32.0], [83.8, 32.0], [83.9, 32.0], [84.0, 32.0], [84.1, 32.0], [84.2, 32.0], [84.3, 32.0], [84.4, 32.0], [84.5, 32.0], [84.6, 32.0], [84.7, 32.0], [84.8, 32.0], [84.9, 32.0], [85.0, 32.0], [85.1, 32.0], [85.2, 32.0], [85.3, 32.0], [85.4, 32.0], [85.5, 32.0], [85.6, 32.0], [85.7, 32.0], [85.8, 32.0], [85.9, 32.0], [86.0, 32.0], [86.1, 32.0], [86.2, 32.0], [86.3, 32.0], [86.4, 32.0], [86.5, 32.0], [86.6, 32.0], [86.7, 32.0], [86.8, 32.0], [86.9, 32.0], [87.0, 32.0], [87.1, 32.0], [87.2, 32.0], [87.3, 32.0], [87.4, 32.0], [87.5, 32.0], [87.6, 32.0], [87.7, 32.0], [87.8, 32.0], [87.9, 32.0], [88.0, 32.0], [88.1, 32.0], [88.2, 32.0], [88.3, 32.0], [88.4, 32.0], [88.5, 32.0], [88.6, 32.0], [88.7, 32.0], [88.8, 32.0], [88.9, 32.0], [89.0, 32.0], [89.1, 32.0], [89.2, 32.0], [89.3, 32.0], [89.4, 32.0], [89.5, 32.0], [89.6, 32.0], [89.7, 32.0], [89.8, 32.0], [89.9, 32.0], [90.0, 212.0], [90.1, 212.0], [90.2, 212.0], [90.3, 212.0], [90.4, 212.0], [90.5, 212.0], [90.6, 212.0], [90.7, 212.0], [90.8, 212.0], [90.9, 212.0], [91.0, 212.0], [91.1, 212.0], [91.2, 212.0], [91.3, 212.0], [91.4, 212.0], [91.5, 212.0], [91.6, 212.0], [91.7, 212.0], [91.8, 212.0], [91.9, 212.0], [92.0, 212.0], [92.1, 212.0], [92.2, 212.0], [92.3, 212.0], [92.4, 212.0], [92.5, 212.0], [92.6, 212.0], [92.7, 212.0], [92.8, 212.0], [92.9, 212.0], [93.0, 212.0], [93.1, 212.0], [93.2, 212.0], [93.3, 212.0], [93.4, 212.0], [93.5, 212.0], [93.6, 212.0], [93.7, 212.0], [93.8, 212.0], [93.9, 212.0], [94.0, 212.0], [94.1, 212.0], [94.2, 212.0], [94.3, 212.0], [94.4, 212.0], [94.5, 212.0], [94.6, 212.0], [94.7, 212.0], [94.8, 212.0], [94.9, 212.0], [95.0, 212.0], [95.1, 212.0], [95.2, 212.0], [95.3, 212.0], [95.4, 212.0], [95.5, 212.0], [95.6, 212.0], [95.7, 212.0], [95.8, 212.0], [95.9, 212.0], [96.0, 212.0], [96.1, 212.0], [96.2, 212.0], [96.3, 212.0], [96.4, 212.0], [96.5, 212.0], [96.6, 212.0], [96.7, 212.0], [96.8, 212.0], [96.9, 212.0], [97.0, 212.0], [97.1, 212.0], [97.2, 212.0], [97.3, 212.0], [97.4, 212.0], [97.5, 212.0], [97.6, 212.0], [97.7, 212.0], [97.8, 212.0], [97.9, 212.0], [98.0, 212.0], [98.1, 212.0], [98.2, 212.0], [98.3, 212.0], [98.4, 212.0], [98.5, 212.0], [98.6, 212.0], [98.7, 212.0], [98.8, 212.0], [98.9, 212.0], [99.0, 212.0], [99.1, 212.0], [99.2, 212.0], [99.3, 212.0], [99.4, 212.0], [99.5, 212.0], [99.6, 212.0], [99.7, 212.0], [99.8, 212.0], [99.9, 212.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 13.0], [0.1, 13.0], [0.2, 13.0], [0.3, 13.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 14.0], [17.6, 14.0], [17.7, 14.0], [17.8, 14.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 14.0], [18.4, 14.0], [18.5, 14.0], [18.6, 14.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 14.0], [19.2, 14.0], [19.3, 14.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 14.0], [19.9, 14.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 15.0], [21.6, 15.0], [21.7, 15.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 15.0], [22.3, 15.0], [22.4, 15.0], [22.5, 15.0], [22.6, 15.0], [22.7, 15.0], [22.8, 15.0], [22.9, 15.0], [23.0, 15.0], [23.1, 15.0], [23.2, 15.0], [23.3, 15.0], [23.4, 15.0], [23.5, 15.0], [23.6, 15.0], [23.7, 15.0], [23.8, 15.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 15.0], [24.6, 15.0], [24.7, 15.0], [24.8, 15.0], [24.9, 15.0], [25.0, 15.0], [25.1, 15.0], [25.2, 15.0], [25.3, 15.0], [25.4, 15.0], [25.5, 15.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 15.0], [27.1, 15.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 15.0], [28.7, 15.0], [28.8, 15.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 15.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 15.0], [30.0, 15.0], [30.1, 15.0], [30.2, 15.0], [30.3, 15.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 15.0], [31.0, 15.0], [31.1, 15.0], [31.2, 15.0], [31.3, 15.0], [31.4, 15.0], [31.5, 15.0], [31.6, 15.0], [31.7, 15.0], [31.8, 15.0], [31.9, 15.0], [32.0, 15.0], [32.1, 15.0], [32.2, 15.0], [32.3, 15.0], [32.4, 15.0], [32.5, 15.0], [32.6, 15.0], [32.7, 15.0], [32.8, 15.0], [32.9, 15.0], [33.0, 15.0], [33.1, 15.0], [33.2, 15.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 15.0], [33.9, 15.0], [34.0, 15.0], [34.1, 15.0], [34.2, 15.0], [34.3, 15.0], [34.4, 15.0], [34.5, 15.0], [34.6, 15.0], [34.7, 15.0], [34.8, 15.0], [34.9, 15.0], [35.0, 15.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 15.0], [39.9, 15.0], [40.0, 16.0], [40.1, 16.0], [40.2, 16.0], [40.3, 16.0], [40.4, 16.0], [40.5, 16.0], [40.6, 16.0], [40.7, 16.0], [40.8, 16.0], [40.9, 16.0], [41.0, 16.0], [41.1, 16.0], [41.2, 16.0], [41.3, 16.0], [41.4, 16.0], [41.5, 16.0], [41.6, 16.0], [41.7, 16.0], [41.8, 16.0], [41.9, 16.0], [42.0, 16.0], [42.1, 16.0], [42.2, 16.0], [42.3, 16.0], [42.4, 16.0], [42.5, 16.0], [42.6, 16.0], [42.7, 16.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 16.0], [43.3, 16.0], [43.4, 16.0], [43.5, 16.0], [43.6, 16.0], [43.7, 16.0], [43.8, 16.0], [43.9, 16.0], [44.0, 16.0], [44.1, 16.0], [44.2, 16.0], [44.3, 16.0], [44.4, 16.0], [44.5, 16.0], [44.6, 16.0], [44.7, 16.0], [44.8, 16.0], [44.9, 16.0], [45.0, 16.0], [45.1, 16.0], [45.2, 16.0], [45.3, 16.0], [45.4, 16.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 16.0], [46.3, 16.0], [46.4, 16.0], [46.5, 16.0], [46.6, 16.0], [46.7, 16.0], [46.8, 16.0], [46.9, 16.0], [47.0, 16.0], [47.1, 16.0], [47.2, 16.0], [47.3, 16.0], [47.4, 16.0], [47.5, 16.0], [47.6, 16.0], [47.7, 16.0], [47.8, 16.0], [47.9, 16.0], [48.0, 16.0], [48.1, 16.0], [48.2, 16.0], [48.3, 16.0], [48.4, 16.0], [48.5, 16.0], [48.6, 16.0], [48.7, 16.0], [48.8, 16.0], [48.9, 16.0], [49.0, 16.0], [49.1, 16.0], [49.2, 16.0], [49.3, 16.0], [49.4, 16.0], [49.5, 16.0], [49.6, 16.0], [49.7, 16.0], [49.8, 16.0], [49.9, 16.0], [50.0, 17.0], [50.1, 17.0], [50.2, 17.0], [50.3, 17.0], [50.4, 17.0], [50.5, 17.0], [50.6, 17.0], [50.7, 17.0], [50.8, 17.0], [50.9, 17.0], [51.0, 17.0], [51.1, 17.0], [51.2, 17.0], [51.3, 17.0], [51.4, 17.0], [51.5, 17.0], [51.6, 17.0], [51.7, 17.0], [51.8, 17.0], [51.9, 17.0], [52.0, 17.0], [52.1, 17.0], [52.2, 17.0], [52.3, 17.0], [52.4, 17.0], [52.5, 17.0], [52.6, 17.0], [52.7, 17.0], [52.8, 17.0], [52.9, 17.0], [53.0, 17.0], [53.1, 17.0], [53.2, 17.0], [53.3, 17.0], [53.4, 17.0], [53.5, 17.0], [53.6, 17.0], [53.7, 17.0], [53.8, 17.0], [53.9, 17.0], [54.0, 17.0], [54.1, 17.0], [54.2, 17.0], [54.3, 17.0], [54.4, 17.0], [54.5, 17.0], [54.6, 17.0], [54.7, 17.0], [54.8, 17.0], [54.9, 17.0], [55.0, 17.0], [55.1, 17.0], [55.2, 17.0], [55.3, 17.0], [55.4, 17.0], [55.5, 17.0], [55.6, 17.0], [55.7, 17.0], [55.8, 17.0], [55.9, 17.0], [56.0, 17.0], [56.1, 17.0], [56.2, 17.0], [56.3, 17.0], [56.4, 17.0], [56.5, 17.0], [56.6, 17.0], [56.7, 17.0], [56.8, 17.0], [56.9, 17.0], [57.0, 17.0], [57.1, 17.0], [57.2, 17.0], [57.3, 17.0], [57.4, 17.0], [57.5, 17.0], [57.6, 17.0], [57.7, 17.0], [57.8, 17.0], [57.9, 17.0], [58.0, 17.0], [58.1, 17.0], [58.2, 17.0], [58.3, 17.0], [58.4, 17.0], [58.5, 17.0], [58.6, 17.0], [58.7, 17.0], [58.8, 17.0], [58.9, 17.0], [59.0, 17.0], [59.1, 17.0], [59.2, 17.0], [59.3, 17.0], [59.4, 17.0], [59.5, 17.0], [59.6, 17.0], [59.7, 17.0], [59.8, 17.0], [59.9, 17.0], [60.0, 18.0], [60.1, 18.0], [60.2, 18.0], [60.3, 18.0], [60.4, 18.0], [60.5, 18.0], [60.6, 18.0], [60.7, 18.0], [60.8, 18.0], [60.9, 18.0], [61.0, 18.0], [61.1, 18.0], [61.2, 18.0], [61.3, 18.0], [61.4, 18.0], [61.5, 18.0], [61.6, 18.0], [61.7, 18.0], [61.8, 18.0], [61.9, 18.0], [62.0, 18.0], [62.1, 18.0], [62.2, 18.0], [62.3, 18.0], [62.4, 18.0], [62.5, 18.0], [62.6, 18.0], [62.7, 18.0], [62.8, 18.0], [62.9, 18.0], [63.0, 18.0], [63.1, 18.0], [63.2, 18.0], [63.3, 18.0], [63.4, 18.0], [63.5, 18.0], [63.6, 18.0], [63.7, 18.0], [63.8, 18.0], [63.9, 18.0], [64.0, 18.0], [64.1, 18.0], [64.2, 18.0], [64.3, 18.0], [64.4, 18.0], [64.5, 18.0], [64.6, 18.0], [64.7, 18.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 18.0], [65.9, 18.0], [66.0, 18.0], [66.1, 18.0], [66.2, 18.0], [66.3, 18.0], [66.4, 18.0], [66.5, 18.0], [66.6, 18.0], [66.7, 18.0], [66.8, 18.0], [66.9, 18.0], [67.0, 18.0], [67.1, 18.0], [67.2, 18.0], [67.3, 18.0], [67.4, 18.0], [67.5, 18.0], [67.6, 18.0], [67.7, 18.0], [67.8, 18.0], [67.9, 18.0], [68.0, 18.0], [68.1, 18.0], [68.2, 18.0], [68.3, 18.0], [68.4, 18.0], [68.5, 18.0], [68.6, 18.0], [68.7, 18.0], [68.8, 18.0], [68.9, 18.0], [69.0, 18.0], [69.1, 18.0], [69.2, 18.0], [69.3, 18.0], [69.4, 18.0], [69.5, 18.0], [69.6, 18.0], [69.7, 18.0], [69.8, 18.0], [69.9, 18.0], [70.0, 26.0], [70.1, 26.0], [70.2, 26.0], [70.3, 26.0], [70.4, 26.0], [70.5, 26.0], [70.6, 26.0], [70.7, 26.0], [70.8, 26.0], [70.9, 26.0], [71.0, 26.0], [71.1, 26.0], [71.2, 26.0], [71.3, 26.0], [71.4, 26.0], [71.5, 26.0], [71.6, 26.0], [71.7, 26.0], [71.8, 26.0], [71.9, 26.0], [72.0, 26.0], [72.1, 26.0], [72.2, 26.0], [72.3, 26.0], [72.4, 26.0], [72.5, 26.0], [72.6, 26.0], [72.7, 26.0], [72.8, 26.0], [72.9, 26.0], [73.0, 26.0], [73.1, 26.0], [73.2, 26.0], [73.3, 26.0], [73.4, 26.0], [73.5, 26.0], [73.6, 26.0], [73.7, 26.0], [73.8, 26.0], [73.9, 26.0], [74.0, 26.0], [74.1, 26.0], [74.2, 26.0], [74.3, 26.0], [74.4, 26.0], [74.5, 26.0], [74.6, 26.0], [74.7, 26.0], [74.8, 26.0], [74.9, 26.0], [75.0, 26.0], [75.1, 26.0], [75.2, 26.0], [75.3, 26.0], [75.4, 26.0], [75.5, 26.0], [75.6, 26.0], [75.7, 26.0], [75.8, 26.0], [75.9, 26.0], [76.0, 26.0], [76.1, 26.0], [76.2, 26.0], [76.3, 26.0], [76.4, 26.0], [76.5, 26.0], [76.6, 26.0], [76.7, 26.0], [76.8, 26.0], [76.9, 26.0], [77.0, 26.0], [77.1, 26.0], [77.2, 26.0], [77.3, 26.0], [77.4, 26.0], [77.5, 26.0], [77.6, 26.0], [77.7, 26.0], [77.8, 26.0], [77.9, 26.0], [78.0, 26.0], [78.1, 26.0], [78.2, 26.0], [78.3, 26.0], [78.4, 26.0], [78.5, 26.0], [78.6, 26.0], [78.7, 26.0], [78.8, 26.0], [78.9, 26.0], [79.0, 26.0], [79.1, 26.0], [79.2, 26.0], [79.3, 26.0], [79.4, 26.0], [79.5, 26.0], [79.6, 26.0], [79.7, 26.0], [79.8, 26.0], [79.9, 26.0], [80.0, 27.0], [80.1, 27.0], [80.2, 27.0], [80.3, 27.0], [80.4, 27.0], [80.5, 27.0], [80.6, 27.0], [80.7, 27.0], [80.8, 27.0], [80.9, 27.0], [81.0, 27.0], [81.1, 27.0], [81.2, 27.0], [81.3, 27.0], [81.4, 27.0], [81.5, 27.0], [81.6, 27.0], [81.7, 27.0], [81.8, 27.0], [81.9, 27.0], [82.0, 27.0], [82.1, 27.0], [82.2, 27.0], [82.3, 27.0], [82.4, 27.0], [82.5, 27.0], [82.6, 27.0], [82.7, 27.0], [82.8, 27.0], [82.9, 27.0], [83.0, 27.0], [83.1, 27.0], [83.2, 27.0], [83.3, 27.0], [83.4, 27.0], [83.5, 27.0], [83.6, 27.0], [83.7, 27.0], [83.8, 27.0], [83.9, 27.0], [84.0, 27.0], [84.1, 27.0], [84.2, 27.0], [84.3, 27.0], [84.4, 27.0], [84.5, 27.0], [84.6, 27.0], [84.7, 27.0], [84.8, 27.0], [84.9, 27.0], [85.0, 27.0], [85.1, 27.0], [85.2, 27.0], [85.3, 27.0], [85.4, 27.0], [85.5, 27.0], [85.6, 27.0], [85.7, 27.0], [85.8, 27.0], [85.9, 27.0], [86.0, 27.0], [86.1, 27.0], [86.2, 27.0], [86.3, 27.0], [86.4, 27.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 27.0], [86.9, 27.0], [87.0, 27.0], [87.1, 27.0], [87.2, 27.0], [87.3, 27.0], [87.4, 27.0], [87.5, 27.0], [87.6, 27.0], [87.7, 27.0], [87.8, 27.0], [87.9, 27.0], [88.0, 27.0], [88.1, 27.0], [88.2, 27.0], [88.3, 27.0], [88.4, 27.0], [88.5, 27.0], [88.6, 27.0], [88.7, 27.0], [88.8, 27.0], [88.9, 27.0], [89.0, 27.0], [89.1, 27.0], [89.2, 27.0], [89.3, 27.0], [89.4, 27.0], [89.5, 27.0], [89.6, 27.0], [89.7, 27.0], [89.8, 27.0], [89.9, 27.0], [90.0, 206.0], [90.1, 206.0], [90.2, 206.0], [90.3, 206.0], [90.4, 206.0], [90.5, 206.0], [90.6, 206.0], [90.7, 206.0], [90.8, 206.0], [90.9, 206.0], [91.0, 206.0], [91.1, 206.0], [91.2, 206.0], [91.3, 206.0], [91.4, 206.0], [91.5, 206.0], [91.6, 206.0], [91.7, 206.0], [91.8, 206.0], [91.9, 206.0], [92.0, 206.0], [92.1, 206.0], [92.2, 206.0], [92.3, 206.0], [92.4, 206.0], [92.5, 206.0], [92.6, 206.0], [92.7, 206.0], [92.8, 206.0], [92.9, 206.0], [93.0, 206.0], [93.1, 206.0], [93.2, 206.0], [93.3, 206.0], [93.4, 206.0], [93.5, 206.0], [93.6, 206.0], [93.7, 206.0], [93.8, 206.0], [93.9, 206.0], [94.0, 206.0], [94.1, 206.0], [94.2, 206.0], [94.3, 206.0], [94.4, 206.0], [94.5, 206.0], [94.6, 206.0], [94.7, 206.0], [94.8, 206.0], [94.9, 206.0], [95.0, 206.0], [95.1, 206.0], [95.2, 206.0], [95.3, 206.0], [95.4, 206.0], [95.5, 206.0], [95.6, 206.0], [95.7, 206.0], [95.8, 206.0], [95.9, 206.0], [96.0, 206.0], [96.1, 206.0], [96.2, 206.0], [96.3, 206.0], [96.4, 206.0], [96.5, 206.0], [96.6, 206.0], [96.7, 206.0], [96.8, 206.0], [96.9, 206.0], [97.0, 206.0], [97.1, 206.0], [97.2, 206.0], [97.3, 206.0], [97.4, 206.0], [97.5, 206.0], [97.6, 206.0], [97.7, 206.0], [97.8, 206.0], [97.9, 206.0], [98.0, 206.0], [98.1, 206.0], [98.2, 206.0], [98.3, 206.0], [98.4, 206.0], [98.5, 206.0], [98.6, 206.0], [98.7, 206.0], [98.8, 206.0], [98.9, 206.0], [99.0, 206.0], [99.1, 206.0], [99.2, 206.0], [99.3, 206.0], [99.4, 206.0], [99.5, 206.0], [99.6, 206.0], [99.7, 206.0], [99.8, 206.0], [99.9, 206.0]], "isOverall": false, "label": "Login-0", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "Login-1", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 3.0], [90.1, 3.0], [90.2, 3.0], [90.3, 3.0], [90.4, 3.0], [90.5, 3.0], [90.6, 3.0], [90.7, 3.0], [90.8, 3.0], [90.9, 3.0], [91.0, 3.0], [91.1, 3.0], [91.2, 3.0], [91.3, 3.0], [91.4, 3.0], [91.5, 3.0], [91.6, 3.0], [91.7, 3.0], [91.8, 3.0], [91.9, 3.0], [92.0, 3.0], [92.1, 3.0], [92.2, 3.0], [92.3, 3.0], [92.4, 3.0], [92.5, 3.0], [92.6, 3.0], [92.7, 3.0], [92.8, 3.0], [92.9, 3.0], [93.0, 3.0], [93.1, 3.0], [93.2, 3.0], [93.3, 3.0], [93.4, 3.0], [93.5, 3.0], [93.6, 3.0], [93.7, 3.0], [93.8, 3.0], [93.9, 3.0], [94.0, 3.0], [94.1, 3.0], [94.2, 3.0], [94.3, 3.0], [94.4, 3.0], [94.5, 3.0], [94.6, 3.0], [94.7, 3.0], [94.8, 3.0], [94.9, 3.0], [95.0, 3.0], [95.1, 3.0], [95.2, 3.0], [95.3, 3.0], [95.4, 3.0], [95.5, 3.0], [95.6, 3.0], [95.7, 3.0], [95.8, 3.0], [95.9, 3.0], [96.0, 3.0], [96.1, 3.0], [96.2, 3.0], [96.3, 3.0], [96.4, 3.0], [96.5, 3.0], [96.6, 3.0], [96.7, 3.0], [96.8, 3.0], [96.9, 3.0], [97.0, 3.0], [97.1, 3.0], [97.2, 3.0], [97.3, 3.0], [97.4, 3.0], [97.5, 3.0], [97.6, 3.0], [97.7, 3.0], [97.8, 3.0], [97.9, 3.0], [98.0, 3.0], [98.1, 3.0], [98.2, 3.0], [98.3, 3.0], [98.4, 3.0], [98.5, 3.0], [98.6, 3.0], [98.7, 3.0], [98.8, 3.0], [98.9, 3.0], [99.0, 3.0], [99.1, 3.0], [99.2, 3.0], [99.3, 3.0], [99.4, 3.0], [99.5, 3.0], [99.6, 3.0], [99.7, 3.0], [99.8, 3.0], [99.9, 3.0]], "isOverall": false, "label": "Login-2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 134.0, "series": [{"data": [[600.0, 17.0], [700.0, 56.0], [800.0, 4.0], [900.0, 3.0], [1000.0, 7.0], [1100.0, 5.0], [1200.0, 10.0], [1300.0, 51.0], [1400.0, 38.0], [1500.0, 93.0], [1600.0, 51.0], [1700.0, 71.0], [1800.0, 77.0], [1900.0, 41.0], [2000.0, 64.0], [2100.0, 25.0], [2200.0, 70.0], [2300.0, 51.0], [2400.0, 47.0], [2500.0, 56.0], [2600.0, 64.0], [2700.0, 47.0], [2800.0, 58.0], [2900.0, 72.0], [3000.0, 37.0], [3100.0, 22.0], [3300.0, 25.0], [3200.0, 22.0], [3400.0, 27.0], [3500.0, 43.0], [3600.0, 28.0], [3700.0, 50.0], [3800.0, 97.0], [3900.0, 63.0], [4000.0, 58.0], [4100.0, 53.0], [4300.0, 39.0], [4200.0, 55.0], [4400.0, 66.0], [4500.0, 37.0], [4600.0, 54.0], [4700.0, 58.0], [4800.0, 38.0], [4900.0, 75.0], [5000.0, 59.0], [5100.0, 72.0], [5300.0, 73.0], [5200.0, 74.0], [5400.0, 72.0], [5600.0, 134.0], [5500.0, 97.0], [5700.0, 106.0], [5800.0, 74.0], [5900.0, 41.0], [6000.0, 16.0], [6100.0, 6.0], [6200.0, 16.0], [6300.0, 26.0], [6400.0, 20.0], [6600.0, 16.0], [6500.0, 18.0], [6700.0, 11.0], [6800.0, 3.0], [6900.0, 1.0], [7000.0, 4.0], [7100.0, 1.0], [7200.0, 2.0], [7300.0, 3.0], [7400.0, 1.0], [46700.0, 1.0], [46800.0, 1.0], [46200.0, 1.0], [46000.0, 1.0], [45900.0, 1.0], [48300.0, 2.0], [47900.0, 1.0], [47500.0, 1.0], [47800.0, 1.0], [300.0, 3.0], [400.0, 6.0], [500.0, 10.0]], "isOverall": false, "label": "AddScholarship", "isController": false}, {"data": [[0.0, 9.0], [200.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 9.0], [200.0, 1.0]], "isOverall": false, "label": "Login-0", "isController": false}, {"data": [[0.0, 10.0]], "isOverall": false, "label": "Login-1", "isController": false}, {"data": [[0.0, 10.0]], "isOverall": false, "label": "Login-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 48300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2774.0, "series": [{"data": [[0.0, 48.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 190.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2774.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 28.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 7.175438596491226, "minX": 1.70637498E12, "maxY": 10.0, "series": [{"data": [[1.7063751E12, 10.0], [1.70637606E12, 10.0], [1.7063754E12, 10.0], [1.7063757E12, 10.0], [1.70637504E12, 10.0], [1.706376E12, 10.0], [1.70637582E12, 10.0], [1.70637516E12, 10.0], [1.70637612E12, 10.0], [1.70637546E12, 10.0], [1.70637576E12, 10.0], [1.70637558E12, 10.0], [1.70637588E12, 10.0], [1.70637522E12, 10.0], [1.70637618E12, 7.175438596491226], [1.70637552E12, 10.0], [1.70637534E12, 10.0], [1.70637564E12, 10.0], [1.70637594E12, 10.0], [1.70637528E12, 10.0], [1.70637498E12, 8.868913857677903]], "isOverall": false, "label": "AddSholarship", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70637618E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 4004.206012982575, "series": [{"data": [[4.0, 2202.75], [8.0, 2238.4], [2.0, 2217.75], [1.0, 2791.0], [9.0, 2950.571428571429], [5.0, 2050.5714285714284], [10.0, 4004.206012982575], [3.0, 1464.5], [6.0, 3240.1428571428573], [7.0, 3289.0]], "isOverall": false, "label": "AddScholarship", "isController": false}, {"data": [[9.90566666666667, 3970.4636666666684]], "isOverall": false, "label": "AddScholarship-Aggregated", "isController": false}, {"data": [[1.0, 212.0], [2.0, 32.0], [4.0, 16.0], [8.0, 19.0], [9.0, 19.0], [5.0, 16.0], [10.0, 19.0], [3.0, 32.0], [6.0, 22.0], [7.0, 18.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[5.5, 40.5]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[1.0, 206.0], [2.0, 27.0], [4.0, 14.0], [8.0, 17.0], [9.0, 16.0], [5.0, 13.0], [10.0, 15.0], [3.0, 26.0], [6.0, 18.0], [7.0, 15.0]], "isOverall": false, "label": "Login-0", "isController": false}, {"data": [[5.5, 36.7]], "isOverall": false, "label": "Login-0-Aggregated", "isController": false}, {"data": [[1.0, 1.0], [2.0, 1.0], [4.0, 1.0], [8.0, 1.0], [9.0, 1.0], [5.0, 1.0], [10.0, 1.0], [3.0, 1.0], [6.0, 1.0], [7.0, 1.0]], "isOverall": false, "label": "Login-1", "isController": false}, {"data": [[5.5, 1.0]], "isOverall": false, "label": "Login-1-Aggregated", "isController": false}, {"data": [[1.0, 2.0], [2.0, 2.0], [4.0, 1.0], [8.0, 1.0], [9.0, 1.0], [5.0, 1.0], [10.0, 2.0], [3.0, 3.0], [6.0, 2.0], [7.0, 1.0]], "isOverall": false, "label": "Login-2", "isController": false}, {"data": [[5.5, 1.6]], "isOverall": false, "label": "Login-2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 10.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 224.58333333333334, "minX": 1.70637498E12, "maxY": 4338032.933333334, "series": [{"data": [[1.7063751E12, 3884672.033333333], [1.70637606E12, 4338032.933333334], [1.7063754E12, 3693663.5833333335], [1.7063757E12, 3934258.783333333], [1.70637504E12, 4292489.85], [1.706376E12, 3528004.5166666666], [1.70637582E12, 4048056.2], [1.70637516E12, 4120423.35], [1.70637612E12, 3990079.4], [1.70637546E12, 3825057.2666666666], [1.70637576E12, 3941913.533333333], [1.70637558E12, 3806925.1], [1.70637588E12, 3913474.533333333], [1.70637522E12, 4319310.916666667], [1.70637618E12, 2453430.6666666665], [1.70637552E12, 3754629.9833333334], [1.70637534E12, 3943663.65], [1.70637564E12, 3910361.783333333], [1.70637594E12, 2183002.4], [1.70637528E12, 3656317.1666666665], [1.70637498E12, 2124456.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7063751E12, 1002.0333333333333], [1.70637606E12, 432.21666666666664], [1.7063754E12, 558.8], [1.7063757E12, 461.4166666666667], [1.70637504E12, 1378.9333333333334], [1.706376E12, 355.25], [1.70637582E12, 456.1], [1.70637516E12, 919.7333333333333], [1.70637612E12, 379.75], [1.70637546E12, 539.0], [1.70637576E12, 452.6333333333333], [1.70637558E12, 485.9166666666667], [1.70637588E12, 419.96666666666664], [1.70637522E12, 839.3], [1.70637618E12, 236.21666666666667], [1.70637552E12, 509.8], [1.70637534E12, 636.3833333333333], [1.70637564E12, 477.75], [1.70637594E12, 224.58333333333334], [1.70637528E12, 643.9333333333333], [1.70637498E12, 1181.9833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70637618E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70637498E12, "maxY": 9861.563218390798, "series": [{"data": [[1.7063751E12, 2464.3347107438], [1.70637606E12, 5729.085714285716], [1.7063754E12, 4356.82352941176], [1.7063757E12, 5249.398230088494], [1.70637504E12, 1772.4940476190466], [1.706376E12, 9861.563218390798], [1.70637582E12, 5539.645454545455], [1.70637516E12, 2731.5113122171947], [1.70637612E12, 6329.8494623655915], [1.70637546E12, 4547.772727272728], [1.70637576E12, 5451.318181818182], [1.70637558E12, 5029.529411764708], [1.70637588E12, 5760.039215686278], [1.70637522E12, 2934.182266009854], [1.70637618E12, 5159.298245614036], [1.70637552E12, 4840.927419354837], [1.70637534E12, 3924.9096774193567], [1.70637564E12, 5115.957264957263], [1.70637594E12, 6325.109090909092], [1.70637528E12, 3796.8846153846157], [1.70637498E12, 1098.8414096916301]], "isOverall": false, "label": "AddScholarship", "isController": false}, {"data": [[1.70637498E12, 40.5]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.70637498E12, 36.7]], "isOverall": false, "label": "Login-0", "isController": false}, {"data": [[1.70637498E12, 1.0]], "isOverall": false, "label": "Login-1", "isController": false}, {"data": [[1.70637498E12, 1.6]], "isOverall": false, "label": "Login-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70637618E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70637498E12, "maxY": 9721.114942528737, "series": [{"data": [[1.7063751E12, 2395.5330578512417], [1.70637606E12, 5562.723809523808], [1.7063754E12, 4228.323529411767], [1.7063757E12, 5095.893805309735], [1.70637504E12, 1722.9642857142856], [1.706376E12, 9721.114942528737], [1.70637582E12, 5366.681818181818], [1.70637516E12, 2645.9728506787324], [1.70637612E12, 6130.279569892473], [1.70637546E12, 4415.719696969696], [1.70637576E12, 5283.827272727274], [1.70637558E12, 4884.428571428572], [1.70637588E12, 5583.754901960786], [1.70637522E12, 2826.1871921182283], [1.70637618E12, 5002.9473684210525], [1.70637552E12, 4695.91935483871], [1.70637534E12, 3806.3419354838707], [1.70637564E12, 4961.7094017094005], [1.70637594E12, 6142.000000000002], [1.70637528E12, 3683.7820512820513], [1.70637498E12, 1068.3303964757706]], "isOverall": false, "label": "AddScholarship", "isController": false}, {"data": [[1.70637498E12, 36.4]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.70637498E12, 36.4]], "isOverall": false, "label": "Login-0", "isController": false}, {"data": [[1.70637498E12, 1.0]], "isOverall": false, "label": "Login-1", "isController": false}, {"data": [[1.70637498E12, 1.5]], "isOverall": false, "label": "Login-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70637618E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70637498E12, "maxY": 2136.4252873563228, "series": [{"data": [[1.7063751E12, 16.896694214876035], [1.70637606E12, 131.33333333333326], [1.7063754E12, 47.816176470588246], [1.7063757E12, 133.05309734513278], [1.70637504E12, 8.565476190476195], [1.706376E12, 2136.4252873563228], [1.70637582E12, 99.04545454545456], [1.70637516E12, 12.778280542986424], [1.70637612E12, 98.69892473118283], [1.70637546E12, 101.67424242424242], [1.70637576E12, 96.77272727272724], [1.70637558E12, 124.23529411764707], [1.70637588E12, 54.852941176470594], [1.70637522E12, 22.566502463054196], [1.70637618E12, 33.9122807017544], [1.70637552E12, 60.29032258064513], [1.70637534E12, 74.20645161290321], [1.70637564E12, 107.91452991452995], [1.70637594E12, 284.09090909090907], [1.70637528E12, 24.35256410256409], [1.70637498E12, 0.16299559471365638]], "isOverall": false, "label": "AddScholarship", "isController": false}, {"data": [[1.70637498E12, 30.400000000000002]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.70637498E12, 30.400000000000002]], "isOverall": false, "label": "Login-0", "isController": false}, {"data": [[1.70637498E12, 0.0]], "isOverall": false, "label": "Login-1", "isController": false}, {"data": [[1.70637498E12, 0.0]], "isOverall": false, "label": "Login-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70637618E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.70637498E12, "maxY": 48363.0, "series": [{"data": [[1.7063751E12, 3073.0], [1.70637606E12, 6022.0], [1.7063754E12, 4863.0], [1.7063757E12, 5871.0], [1.70637504E12, 2113.0], [1.706376E12, 48363.0], [1.70637582E12, 5831.0], [1.70637516E12, 3143.0], [1.70637612E12, 6783.0], [1.70637546E12, 5326.0], [1.70637576E12, 5803.0], [1.70637558E12, 5555.0], [1.70637588E12, 6142.0], [1.70637522E12, 3664.0], [1.70637618E12, 6734.0], [1.70637552E12, 5995.0], [1.70637534E12, 4241.0], [1.70637564E12, 5584.0], [1.70637594E12, 7427.0], [1.70637528E12, 4349.0], [1.70637498E12, 1564.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7063751E12, 2875.2], [1.70637606E12, 5944.0], [1.7063754E12, 4742.0], [1.7063757E12, 5521.6], [1.70637504E12, 2035.0], [1.706376E12, 46114.0], [1.70637582E12, 5744.1], [1.70637516E12, 3030.6], [1.70637612E12, 6670.0], [1.70637546E12, 5097.7], [1.70637576E12, 5705.0], [1.70637558E12, 5366.0], [1.70637588E12, 5956.0], [1.70637522E12, 3558.0], [1.70637618E12, 6578.0], [1.70637552E12, 5556.4], [1.70637534E12, 4109.0], [1.70637564E12, 5410.2], [1.70637594E12, 7247.0], [1.70637528E12, 4058.5], [1.70637498E12, 1510.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7063751E12, 3045.599999999999], [1.70637606E12, 6021.45], [1.7063754E12, 4856.5199999999995], [1.7063757E12, 5869.46], [1.70637504E12, 2090.3], [1.706376E12, 48363.0], [1.70637582E12, 5829.38], [1.70637516E12, 3130.15], [1.70637612E12, 6783.0], [1.70637546E12, 5323.03], [1.70637576E12, 5801.8], [1.70637558E12, 5554.4], [1.70637588E12, 6140.740000000001], [1.70637522E12, 3650.83], [1.70637618E12, 6734.0], [1.70637552E12, 5946.040000000001], [1.70637534E12, 4230.55], [1.70637564E12, 5578.96], [1.70637594E12, 7427.0], [1.70637528E12, 4347.35], [1.70637498E12, 1554.4]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7063751E12, 2936.05], [1.70637606E12, 5972.0], [1.7063754E12, 4786.0], [1.7063757E12, 5781.5], [1.70637504E12, 2060.0], [1.706376E12, 47724.6], [1.70637582E12, 5786.75], [1.70637516E12, 3087.15], [1.70637612E12, 6708.6], [1.70637546E12, 5238.75], [1.70637576E12, 5765.5], [1.70637558E12, 5476.0], [1.70637588E12, 6022.5], [1.70637522E12, 3606.65], [1.70637618E12, 6711.9], [1.70637552E12, 5717.8], [1.70637534E12, 4174.0], [1.70637564E12, 5477.5], [1.70637594E12, 7340.4], [1.70637528E12, 4168.5], [1.70637498E12, 1527.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7063751E12, 1866.0], [1.70637606E12, 5516.0], [1.7063754E12, 3986.0], [1.7063757E12, 4853.0], [1.70637504E12, 1468.0], [1.706376E12, 3087.0], [1.70637582E12, 5359.0], [1.70637516E12, 2179.0], [1.70637612E12, 5640.0], [1.70637546E12, 4100.0], [1.70637576E12, 5134.0], [1.70637558E12, 4666.0], [1.70637588E12, 5577.0], [1.70637522E12, 2123.0], [1.70637618E12, 1715.0], [1.70637552E12, 4422.0], [1.70637534E12, 3662.0], [1.70637564E12, 4873.0], [1.70637594E12, 5687.0], [1.70637528E12, 3504.0], [1.70637498E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7063751E12, 2517.0], [1.70637606E12, 5748.5], [1.7063754E12, 4299.0], [1.7063757E12, 5207.0], [1.70637504E12, 1766.0], [1.706376E12, 5571.0], [1.70637582E12, 5583.5], [1.70637516E12, 2860.5], [1.70637612E12, 6370.0], [1.70637546E12, 4441.0], [1.70637576E12, 5452.0], [1.70637558E12, 4969.0], [1.70637588E12, 5776.0], [1.70637522E12, 3197.5], [1.70637618E12, 5806.0], [1.70637552E12, 4682.0], [1.70637534E12, 3908.5], [1.70637564E12, 5094.0], [1.70637594E12, 6037.0], [1.70637528E12, 3818.0], [1.70637498E12, 969.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70637618E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 14.5, "minX": 1.0, "maxY": 5467.0, "series": [{"data": [[8.0, 1500.0], [2.0, 5048.0], [11.0, 731.0], [12.0, 14.5], [3.0, 4856.5], [13.0, 737.0], [14.0, 730.0], [16.0, 259.0], [4.0, 3875.5], [1.0, 5467.0], [17.0, 388.0], [18.0, 617.0], [5.0, 2355.5], [6.0, 2072.0], [7.0, 1693.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 755.0], [4.0, 2061.5], [2.0, 2346.0], [5.0, 1091.0], [6.0, 1079.0], [3.0, 1854.0], [14.0, 351.0], [7.0, 737.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 18.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 14.5, "minX": 1.0, "maxY": 5302.0, "series": [{"data": [[8.0, 1454.0], [2.0, 4892.5], [11.0, 711.0], [12.0, 14.5], [3.0, 4721.0], [13.0, 719.0], [14.0, 713.0], [16.0, 247.0], [4.0, 3760.0], [1.0, 5302.0], [17.0, 377.0], [18.0, 596.5], [5.0, 2223.0], [6.0, 2017.0], [7.0, 1643.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 754.0], [4.0, 2061.0], [2.0, 2345.0], [5.0, 1090.0], [6.0, 1078.0], [3.0, 1853.0], [14.0, 350.0], [7.0, 736.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 18.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7833333333333333, "minX": 1.70637498E12, "maxY": 5.6, "series": [{"data": [[1.7063751E12, 4.033333333333333], [1.70637606E12, 1.75], [1.7063754E12, 2.2666666666666666], [1.7063757E12, 1.8833333333333333], [1.70637504E12, 5.6], [1.706376E12, 1.45], [1.70637582E12, 1.8333333333333333], [1.70637516E12, 3.683333333333333], [1.70637612E12, 1.55], [1.70637546E12, 2.2], [1.70637576E12, 1.8333333333333333], [1.70637558E12, 1.9833333333333334], [1.70637588E12, 1.7], [1.70637522E12, 3.3833333333333333], [1.70637618E12, 0.7833333333333333], [1.70637552E12, 2.066666666666667], [1.70637534E12, 2.5833333333333335], [1.70637564E12, 1.95], [1.70637594E12, 0.9166666666666666], [1.70637528E12, 2.6], [1.70637498E12, 4.616666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70637618E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70637498E12, "maxY": 5.566666666666666, "series": [{"data": [[1.7063751E12, 3.966666666666667], [1.70637606E12, 1.7333333333333334], [1.7063754E12, 2.25], [1.7063757E12, 1.8833333333333333], [1.70637504E12, 5.566666666666666], [1.706376E12, 1.45], [1.70637582E12, 1.8], [1.70637516E12, 3.6], [1.70637612E12, 1.55], [1.70637546E12, 2.2], [1.70637576E12, 1.8166666666666667], [1.70637558E12, 1.9833333333333334], [1.70637588E12, 1.6833333333333333], [1.70637522E12, 3.3333333333333335], [1.70637618E12, 0.9333333333333333], [1.70637552E12, 2.05], [1.70637534E12, 2.566666666666667], [1.70637564E12, 1.95], [1.70637594E12, 0.9166666666666666], [1.70637528E12, 2.566666666666667], [1.70637498E12, 4.066666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70637498E12, 0.3333333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.7063751E12, 0.06666666666666667], [1.70637606E12, 0.016666666666666666], [1.7063754E12, 0.016666666666666666], [1.70637504E12, 0.03333333333333333], [1.70637582E12, 0.03333333333333333], [1.70637516E12, 0.08333333333333333], [1.70637576E12, 0.016666666666666666], [1.70637588E12, 0.016666666666666666], [1.70637522E12, 0.05], [1.70637618E12, 0.016666666666666666], [1.70637552E12, 0.016666666666666666], [1.70637534E12, 0.016666666666666666], [1.70637528E12, 0.03333333333333333], [1.70637498E12, 0.05]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70637618E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70637498E12, "maxY": 5.566666666666666, "series": [{"data": [[1.70637498E12, 0.16666666666666666]], "isOverall": false, "label": "Login-1-success", "isController": false}, {"data": [[1.7063751E12, 0.06666666666666667], [1.70637606E12, 0.016666666666666666], [1.7063754E12, 0.016666666666666666], [1.70637504E12, 0.03333333333333333], [1.70637582E12, 0.03333333333333333], [1.70637516E12, 0.08333333333333333], [1.70637576E12, 0.016666666666666666], [1.70637588E12, 0.016666666666666666], [1.70637522E12, 0.05], [1.70637618E12, 0.016666666666666666], [1.70637552E12, 0.016666666666666666], [1.70637534E12, 0.016666666666666666], [1.70637528E12, 0.03333333333333333], [1.70637498E12, 0.05]], "isOverall": false, "label": "AddScholarship-failure", "isController": false}, {"data": [[1.70637498E12, 0.16666666666666666]], "isOverall": false, "label": "Login-2-success", "isController": false}, {"data": [[1.70637498E12, 0.16666666666666666]], "isOverall": false, "label": "Login-0-success", "isController": false}, {"data": [[1.70637498E12, 0.16666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.7063751E12, 3.966666666666667], [1.70637606E12, 1.7333333333333334], [1.7063754E12, 2.25], [1.7063757E12, 1.8833333333333333], [1.70637504E12, 5.566666666666666], [1.706376E12, 1.45], [1.70637582E12, 1.8], [1.70637516E12, 3.6], [1.70637612E12, 1.55], [1.70637546E12, 2.2], [1.70637576E12, 1.8166666666666667], [1.70637558E12, 1.9833333333333334], [1.70637588E12, 1.6833333333333333], [1.70637522E12, 3.3333333333333335], [1.70637618E12, 0.9333333333333333], [1.70637552E12, 2.05], [1.70637534E12, 2.566666666666667], [1.70637564E12, 1.95], [1.70637594E12, 0.9166666666666666], [1.70637528E12, 2.566666666666667], [1.70637498E12, 3.7333333333333334]], "isOverall": false, "label": "AddScholarship-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70637618E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70637498E12, "maxY": 5.566666666666666, "series": [{"data": [[1.7063751E12, 3.966666666666667], [1.70637606E12, 1.7333333333333334], [1.7063754E12, 2.25], [1.7063757E12, 1.8833333333333333], [1.70637504E12, 5.566666666666666], [1.706376E12, 1.45], [1.70637582E12, 1.8], [1.70637516E12, 3.6], [1.70637612E12, 1.55], [1.70637546E12, 2.2], [1.70637576E12, 1.8166666666666667], [1.70637558E12, 1.9833333333333334], [1.70637588E12, 1.6833333333333333], [1.70637522E12, 3.3333333333333335], [1.70637618E12, 0.9333333333333333], [1.70637552E12, 2.05], [1.70637534E12, 2.566666666666667], [1.70637564E12, 1.95], [1.70637594E12, 0.9166666666666666], [1.70637528E12, 2.566666666666667], [1.70637498E12, 4.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7063751E12, 0.06666666666666667], [1.70637606E12, 0.016666666666666666], [1.7063754E12, 0.016666666666666666], [1.70637504E12, 0.03333333333333333], [1.70637582E12, 0.03333333333333333], [1.70637516E12, 0.08333333333333333], [1.70637576E12, 0.016666666666666666], [1.70637588E12, 0.016666666666666666], [1.70637522E12, 0.05], [1.70637618E12, 0.016666666666666666], [1.70637552E12, 0.016666666666666666], [1.70637534E12, 0.016666666666666666], [1.70637528E12, 0.03333333333333333], [1.70637498E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70637618E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

